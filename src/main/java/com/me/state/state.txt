状态模式定义
定义：当一个对象的内在状态改变时允许改变其行为，这个对象看起来像是改变了其类。

Context：环境角色，定义客户端需要的接口，并且负责具体状态的切换。
State：抽象状态角色，可以是抽象类或者接口，负责对象状态定义，并封装了环境角色。
ConcreteState：具体状态角色，实现抽象角色类，定义了本状态所要做的事情。

优点
避免了过多的条件语句，使得结构更清晰，提高代码的可维护性。
每个状态都是一个子类，方便增加和修改状态。
状态被放置到类的内部，外部调用不需要知道类的内部如何实现状态和行为的变换。
缺点
完全使用状态模式，可能会导致子类会过多。
使用场景
代码中包含大量与对象状态有关的条件语句。
对象的行为依赖着状态，并且行为随着状态的改变而改变。